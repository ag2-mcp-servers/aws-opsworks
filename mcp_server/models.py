# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T12:54:59+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field, RootModel, conint


class AppAttributesKeys(Enum):
    DocumentRoot = 'DocumentRoot'
    RailsEnv = 'RailsEnv'
    AutoBundleOnDeploy = 'AutoBundleOnDeploy'
    AwsFlowRubySettings = 'AwsFlowRubySettings'


class AppType(Enum):
    aws_flow_ruby = 'aws-flow-ruby'
    java = 'java'
    rails = 'rails'
    php = 'php'
    nodejs = 'nodejs'
    static = 'static'
    other = 'other'


class Architecture(Enum):
    x86_64 = 'x86_64'
    i386 = 'i386'


class AutoScalingType(Enum):
    load = 'load'
    timer = 'timer'


class Boolean(RootModel[bool]):
    root: bool


class CloudWatchLogsEncoding(Enum):
    ascii = 'ascii'
    big5 = 'big5'
    big5hkscs = 'big5hkscs'
    cp037 = 'cp037'
    cp424 = 'cp424'
    cp437 = 'cp437'
    cp500 = 'cp500'
    cp720 = 'cp720'
    cp737 = 'cp737'
    cp775 = 'cp775'
    cp850 = 'cp850'
    cp852 = 'cp852'
    cp855 = 'cp855'
    cp856 = 'cp856'
    cp857 = 'cp857'
    cp858 = 'cp858'
    cp860 = 'cp860'
    cp861 = 'cp861'
    cp862 = 'cp862'
    cp863 = 'cp863'
    cp864 = 'cp864'
    cp865 = 'cp865'
    cp866 = 'cp866'
    cp869 = 'cp869'
    cp874 = 'cp874'
    cp875 = 'cp875'
    cp932 = 'cp932'
    cp949 = 'cp949'
    cp950 = 'cp950'
    cp1006 = 'cp1006'
    cp1026 = 'cp1026'
    cp1140 = 'cp1140'
    cp1250 = 'cp1250'
    cp1251 = 'cp1251'
    cp1252 = 'cp1252'
    cp1253 = 'cp1253'
    cp1254 = 'cp1254'
    cp1255 = 'cp1255'
    cp1256 = 'cp1256'
    cp1257 = 'cp1257'
    cp1258 = 'cp1258'
    euc_jp = 'euc_jp'
    euc_jis_2004 = 'euc_jis_2004'
    euc_jisx0213 = 'euc_jisx0213'
    euc_kr = 'euc_kr'
    gb2312 = 'gb2312'
    gbk = 'gbk'
    gb18030 = 'gb18030'
    hz = 'hz'
    iso2022_jp = 'iso2022_jp'
    iso2022_jp_1 = 'iso2022_jp_1'
    iso2022_jp_2 = 'iso2022_jp_2'
    iso2022_jp_2004 = 'iso2022_jp_2004'
    iso2022_jp_3 = 'iso2022_jp_3'
    iso2022_jp_ext = 'iso2022_jp_ext'
    iso2022_kr = 'iso2022_kr'
    latin_1 = 'latin_1'
    iso8859_2 = 'iso8859_2'
    iso8859_3 = 'iso8859_3'
    iso8859_4 = 'iso8859_4'
    iso8859_5 = 'iso8859_5'
    iso8859_6 = 'iso8859_6'
    iso8859_7 = 'iso8859_7'
    iso8859_8 = 'iso8859_8'
    iso8859_9 = 'iso8859_9'
    iso8859_10 = 'iso8859_10'
    iso8859_13 = 'iso8859_13'
    iso8859_14 = 'iso8859_14'
    iso8859_15 = 'iso8859_15'
    iso8859_16 = 'iso8859_16'
    johab = 'johab'
    koi8_r = 'koi8_r'
    koi8_u = 'koi8_u'
    mac_cyrillic = 'mac_cyrillic'
    mac_greek = 'mac_greek'
    mac_iceland = 'mac_iceland'
    mac_latin2 = 'mac_latin2'
    mac_roman = 'mac_roman'
    mac_turkish = 'mac_turkish'
    ptcp154 = 'ptcp154'
    shift_jis = 'shift_jis'
    shift_jis_2004 = 'shift_jis_2004'
    shift_jisx0213 = 'shift_jisx0213'
    utf_32 = 'utf_32'
    utf_32_be = 'utf_32_be'
    utf_32_le = 'utf_32_le'
    utf_16 = 'utf_16'
    utf_16_be = 'utf_16_be'
    utf_16_le = 'utf_16_le'
    utf_7 = 'utf_7'
    utf_8 = 'utf_8'
    utf_8_sig = 'utf_8_sig'


class CloudWatchLogsInitialPosition(Enum):
    start_of_file = 'start_of_file'
    end_of_file = 'end_of_file'


class CloudWatchLogsTimeZone(Enum):
    LOCAL = 'LOCAL'
    UTC = 'UTC'


class DateTime(RootModel[str]):
    root: str


class DeploymentCommandName(Enum):
    install_dependencies = 'install_dependencies'
    update_dependencies = 'update_dependencies'
    update_custom_cookbooks = 'update_custom_cookbooks'
    execute_recipes = 'execute_recipes'
    configure = 'configure'
    setup = 'setup'
    deploy = 'deploy'
    rollback = 'rollback'
    start = 'start'
    stop = 'stop'
    restart = 'restart'
    undeploy = 'undeploy'


class Double(RootModel[float]):
    root: float


class Hour(RootModel[str]):
    root: str


class Integer(RootModel[int]):
    root: int


class LayerAttributesKeys(Enum):
    EcsClusterArn = 'EcsClusterArn'
    EnableHaproxyStats = 'EnableHaproxyStats'
    HaproxyStatsUrl = 'HaproxyStatsUrl'
    HaproxyStatsUser = 'HaproxyStatsUser'
    HaproxyStatsPassword = 'HaproxyStatsPassword'
    HaproxyHealthCheckUrl = 'HaproxyHealthCheckUrl'
    HaproxyHealthCheckMethod = 'HaproxyHealthCheckMethod'
    MysqlRootPassword = 'MysqlRootPassword'
    MysqlRootPasswordUbiquitous = 'MysqlRootPasswordUbiquitous'
    GangliaUrl = 'GangliaUrl'
    GangliaUser = 'GangliaUser'
    GangliaPassword = 'GangliaPassword'
    MemcachedMemory = 'MemcachedMemory'
    NodejsVersion = 'NodejsVersion'
    RubyVersion = 'RubyVersion'
    RubygemsVersion = 'RubygemsVersion'
    ManageBundler = 'ManageBundler'
    BundlerVersion = 'BundlerVersion'
    RailsStack = 'RailsStack'
    PassengerVersion = 'PassengerVersion'
    Jvm = 'Jvm'
    JvmVersion = 'JvmVersion'
    JvmOptions = 'JvmOptions'
    JavaAppServer = 'JavaAppServer'
    JavaAppServerVersion = 'JavaAppServerVersion'


class LayerType(Enum):
    aws_flow_ruby = 'aws-flow-ruby'
    ecs_cluster = 'ecs-cluster'
    java_app = 'java-app'
    lb = 'lb'
    web = 'web'
    php_app = 'php-app'
    rails_app = 'rails-app'
    nodejs_app = 'nodejs-app'
    memcached = 'memcached'
    db_master = 'db-master'
    monitoring_master = 'monitoring-master'
    custom = 'custom'


class MaxResults(RootModel[int]):
    root: int


class Minute(RootModel[conint(ge=1, le=100)]):
    root: conint(ge=1, le=100)


class NextToken(RootModel[str]):
    root: str


class ResourceArn(RootModel[str]):
    root: str


class ResourceNotFoundException(RootModel[Any]):
    root: Any


class RootDeviceType(Enum):
    ebs = 'ebs'
    instance_store = 'instance-store'


class ShutdownEventConfiguration(BaseModel):
    DelayUntilElbConnectionsDrained: Optional[Boolean] = None
    ExecutionTimeout: Optional[Integer] = None


class SourceType(Enum):
    git = 'git'
    svn = 'svn'
    archive = 'archive'
    s3 = 's3'


class StackAttributesKeys(Enum):
    Color = 'Color'


class String(RootModel[str]):
    root: str


class Strings(RootModel[List[String]]):
    root: List[String]


class Switch(RootModel[str]):
    root: str


class TagKey(RootModel[str]):
    root: str


class TagKeys(RootModel[List[TagKey]]):
    root: List[TagKey]


class TagValue(RootModel[str]):
    root: str


class Tags(RootModel[Optional[Dict[str, TagValue]]]):
    root: Optional[Dict[str, TagValue]] = None


class TemporaryCredential(BaseModel):
    InstanceId: Optional[String] = None
    Password: Optional[String] = None
    Username: Optional[String] = None
    ValidForInMinutes: Optional[Integer] = None


class UnassignInstanceRequest(BaseModel):
    InstanceId: String


class UnassignVolumeRequest(BaseModel):
    VolumeId: String


class UntagResourceRequest(BaseModel):
    ResourceArn_1: ResourceArn = Field(..., alias='ResourceArn')
    TagKeys_1: TagKeys = Field(..., alias='TagKeys')


class UpdateElasticIpRequest(BaseModel):
    ElasticIp: String
    Name: Optional[String] = None


class UpdateInstanceRequest(BaseModel):
    AgentVersion: Optional[String] = None
    AmiId: Optional[String] = None
    Architecture_1: Optional[Architecture] = Field(None, alias='Architecture')
    AutoScalingType_1: Optional[AutoScalingType] = Field(None, alias='AutoScalingType')
    EbsOptimized: Optional[Boolean] = None
    Hostname: Optional[String] = None
    InstallUpdatesOnBoot: Optional[Boolean] = None
    InstanceId: String
    InstanceType: Optional[String] = None
    LayerIds: Optional[Strings] = None
    Os: Optional[String] = None
    SshKeyName: Optional[String] = None


class UpdateMyUserProfileRequest(BaseModel):
    SshPublicKey: Optional[String] = None


class UpdateRdsDbInstanceRequest(BaseModel):
    DbPassword: Optional[String] = None
    DbUser: Optional[String] = None
    RdsDbInstanceArn: String


class UpdateUserProfileRequest(BaseModel):
    AllowSelfManagement: Optional[Boolean] = None
    IamUserArn: String
    SshPublicKey: Optional[String] = None
    SshUsername: Optional[String] = None


class UpdateVolumeRequest(BaseModel):
    MountPoint: Optional[String] = None
    Name: Optional[String] = None
    VolumeId: String


class UserProfile(BaseModel):
    AllowSelfManagement: Optional[Boolean] = None
    IamUserArn: Optional[String] = None
    Name: Optional[String] = None
    SshPublicKey: Optional[String] = None
    SshUsername: Optional[String] = None


class UserProfiles(RootModel[List[UserProfile]]):
    root: List[UserProfile]


class ValidForInMinutes(RootModel[conint(ge=60, le=1440)]):
    root: conint(ge=60, le=1440)


class ValidationException(RootModel[Any]):
    root: Any


class VirtualizationType(Enum):
    paravirtual = 'paravirtual'
    hvm = 'hvm'


class Volume(BaseModel):
    AvailabilityZone: Optional[String] = None
    Device: Optional[String] = None
    Ec2VolumeId: Optional[String] = None
    Encrypted: Optional[Boolean] = None
    InstanceId: Optional[String] = None
    Iops: Optional[Integer] = None
    MountPoint: Optional[String] = None
    Name: Optional[String] = None
    RaidArrayId: Optional[String] = None
    Region: Optional[String] = None
    Size: Optional[Integer] = None
    Status: Optional[String] = None
    VolumeId: Optional[String] = None
    VolumeType: Optional[String] = None


class VolumeConfiguration(BaseModel):
    Encrypted: Optional[Boolean] = None
    Iops: Optional[Integer] = None
    MountPoint: String
    NumberOfDisks: Integer
    RaidLevel: Optional[Integer] = None
    Size: Integer
    VolumeType: Optional[String] = None


class VolumeConfigurations(RootModel[List[VolumeConfiguration]]):
    root: List[VolumeConfiguration]


class VolumeType(Enum):
    gp2 = 'gp2'
    io1 = 'io1'
    standard = 'standard'


class Volumes(RootModel[List[Volume]]):
    root: List[Volume]


class XAmzTarget(Enum):
    OpsWorks_20130218_AssignInstance = 'OpsWorks_20130218.AssignInstance'


class XAmzTarget1(Enum):
    OpsWorks_20130218_AssignVolume = 'OpsWorks_20130218.AssignVolume'


class XAmzTarget2(Enum):
    OpsWorks_20130218_AssociateElasticIp = 'OpsWorks_20130218.AssociateElasticIp'


class XAmzTarget3(Enum):
    OpsWorks_20130218_AttachElasticLoadBalancer = (
        'OpsWorks_20130218.AttachElasticLoadBalancer'
    )


class XAmzTarget4(Enum):
    OpsWorks_20130218_CloneStack = 'OpsWorks_20130218.CloneStack'


class XAmzTarget5(Enum):
    OpsWorks_20130218_CreateApp = 'OpsWorks_20130218.CreateApp'


class XAmzTarget6(Enum):
    OpsWorks_20130218_CreateDeployment = 'OpsWorks_20130218.CreateDeployment'


class XAmzTarget7(Enum):
    OpsWorks_20130218_CreateInstance = 'OpsWorks_20130218.CreateInstance'


class XAmzTarget8(Enum):
    OpsWorks_20130218_CreateLayer = 'OpsWorks_20130218.CreateLayer'


class XAmzTarget9(Enum):
    OpsWorks_20130218_CreateStack = 'OpsWorks_20130218.CreateStack'


class XAmzTarget10(Enum):
    OpsWorks_20130218_CreateUserProfile = 'OpsWorks_20130218.CreateUserProfile'


class XAmzTarget11(Enum):
    OpsWorks_20130218_DeleteApp = 'OpsWorks_20130218.DeleteApp'


class XAmzTarget12(Enum):
    OpsWorks_20130218_DeleteInstance = 'OpsWorks_20130218.DeleteInstance'


class XAmzTarget13(Enum):
    OpsWorks_20130218_DeleteLayer = 'OpsWorks_20130218.DeleteLayer'


class XAmzTarget14(Enum):
    OpsWorks_20130218_DeleteStack = 'OpsWorks_20130218.DeleteStack'


class XAmzTarget15(Enum):
    OpsWorks_20130218_DeleteUserProfile = 'OpsWorks_20130218.DeleteUserProfile'


class XAmzTarget16(Enum):
    OpsWorks_20130218_DeregisterEcsCluster = 'OpsWorks_20130218.DeregisterEcsCluster'


class XAmzTarget17(Enum):
    OpsWorks_20130218_DeregisterElasticIp = 'OpsWorks_20130218.DeregisterElasticIp'


class XAmzTarget18(Enum):
    OpsWorks_20130218_DeregisterInstance = 'OpsWorks_20130218.DeregisterInstance'


class XAmzTarget19(Enum):
    OpsWorks_20130218_DeregisterRdsDbInstance = (
        'OpsWorks_20130218.DeregisterRdsDbInstance'
    )


class XAmzTarget20(Enum):
    OpsWorks_20130218_DeregisterVolume = 'OpsWorks_20130218.DeregisterVolume'


class XAmzTarget21(Enum):
    OpsWorks_20130218_DescribeAgentVersions = 'OpsWorks_20130218.DescribeAgentVersions'


class XAmzTarget22(Enum):
    OpsWorks_20130218_DescribeApps = 'OpsWorks_20130218.DescribeApps'


class XAmzTarget23(Enum):
    OpsWorks_20130218_DescribeCommands = 'OpsWorks_20130218.DescribeCommands'


class XAmzTarget24(Enum):
    OpsWorks_20130218_DescribeDeployments = 'OpsWorks_20130218.DescribeDeployments'


class XAmzTarget25(Enum):
    OpsWorks_20130218_DescribeEcsClusters = 'OpsWorks_20130218.DescribeEcsClusters'


class XAmzTarget26(Enum):
    OpsWorks_20130218_DescribeElasticIps = 'OpsWorks_20130218.DescribeElasticIps'


class XAmzTarget27(Enum):
    OpsWorks_20130218_DescribeElasticLoadBalancers = (
        'OpsWorks_20130218.DescribeElasticLoadBalancers'
    )


class XAmzTarget28(Enum):
    OpsWorks_20130218_DescribeInstances = 'OpsWorks_20130218.DescribeInstances'


class XAmzTarget29(Enum):
    OpsWorks_20130218_DescribeLayers = 'OpsWorks_20130218.DescribeLayers'


class XAmzTarget30(Enum):
    OpsWorks_20130218_DescribeLoadBasedAutoScaling = (
        'OpsWorks_20130218.DescribeLoadBasedAutoScaling'
    )


class XAmzTarget31(Enum):
    OpsWorks_20130218_DescribeMyUserProfile = 'OpsWorks_20130218.DescribeMyUserProfile'


class XAmzTarget32(Enum):
    OpsWorks_20130218_DescribeOperatingSystems = (
        'OpsWorks_20130218.DescribeOperatingSystems'
    )


class XAmzTarget33(Enum):
    OpsWorks_20130218_DescribePermissions = 'OpsWorks_20130218.DescribePermissions'


class XAmzTarget34(Enum):
    OpsWorks_20130218_DescribeRaidArrays = 'OpsWorks_20130218.DescribeRaidArrays'


class XAmzTarget35(Enum):
    OpsWorks_20130218_DescribeRdsDbInstances = (
        'OpsWorks_20130218.DescribeRdsDbInstances'
    )


class XAmzTarget36(Enum):
    OpsWorks_20130218_DescribeServiceErrors = 'OpsWorks_20130218.DescribeServiceErrors'


class XAmzTarget37(Enum):
    OpsWorks_20130218_DescribeStackProvisioningParameters = (
        'OpsWorks_20130218.DescribeStackProvisioningParameters'
    )


class XAmzTarget38(Enum):
    OpsWorks_20130218_DescribeStackSummary = 'OpsWorks_20130218.DescribeStackSummary'


class XAmzTarget39(Enum):
    OpsWorks_20130218_DescribeStacks = 'OpsWorks_20130218.DescribeStacks'


class XAmzTarget40(Enum):
    OpsWorks_20130218_DescribeTimeBasedAutoScaling = (
        'OpsWorks_20130218.DescribeTimeBasedAutoScaling'
    )


class XAmzTarget41(Enum):
    OpsWorks_20130218_DescribeUserProfiles = 'OpsWorks_20130218.DescribeUserProfiles'


class XAmzTarget42(Enum):
    OpsWorks_20130218_DescribeVolumes = 'OpsWorks_20130218.DescribeVolumes'


class XAmzTarget43(Enum):
    OpsWorks_20130218_DetachElasticLoadBalancer = (
        'OpsWorks_20130218.DetachElasticLoadBalancer'
    )


class XAmzTarget44(Enum):
    OpsWorks_20130218_DisassociateElasticIp = 'OpsWorks_20130218.DisassociateElasticIp'


class XAmzTarget45(Enum):
    OpsWorks_20130218_GetHostnameSuggestion = 'OpsWorks_20130218.GetHostnameSuggestion'


class XAmzTarget46(Enum):
    OpsWorks_20130218_GrantAccess = 'OpsWorks_20130218.GrantAccess'


class XAmzTarget47(Enum):
    OpsWorks_20130218_ListTags = 'OpsWorks_20130218.ListTags'


class XAmzTarget48(Enum):
    OpsWorks_20130218_RebootInstance = 'OpsWorks_20130218.RebootInstance'


class XAmzTarget49(Enum):
    OpsWorks_20130218_RegisterEcsCluster = 'OpsWorks_20130218.RegisterEcsCluster'


class XAmzTarget50(Enum):
    OpsWorks_20130218_RegisterElasticIp = 'OpsWorks_20130218.RegisterElasticIp'


class XAmzTarget51(Enum):
    OpsWorks_20130218_RegisterInstance = 'OpsWorks_20130218.RegisterInstance'


class XAmzTarget52(Enum):
    OpsWorks_20130218_RegisterRdsDbInstance = 'OpsWorks_20130218.RegisterRdsDbInstance'


class XAmzTarget53(Enum):
    OpsWorks_20130218_RegisterVolume = 'OpsWorks_20130218.RegisterVolume'


class XAmzTarget54(Enum):
    OpsWorks_20130218_SetLoadBasedAutoScaling = (
        'OpsWorks_20130218.SetLoadBasedAutoScaling'
    )


class XAmzTarget55(Enum):
    OpsWorks_20130218_SetPermission = 'OpsWorks_20130218.SetPermission'


class XAmzTarget56(Enum):
    OpsWorks_20130218_SetTimeBasedAutoScaling = (
        'OpsWorks_20130218.SetTimeBasedAutoScaling'
    )


class XAmzTarget57(Enum):
    OpsWorks_20130218_StartInstance = 'OpsWorks_20130218.StartInstance'


class XAmzTarget58(Enum):
    OpsWorks_20130218_StartStack = 'OpsWorks_20130218.StartStack'


class XAmzTarget59(Enum):
    OpsWorks_20130218_StopInstance = 'OpsWorks_20130218.StopInstance'


class XAmzTarget60(Enum):
    OpsWorks_20130218_StopStack = 'OpsWorks_20130218.StopStack'


class XAmzTarget61(Enum):
    OpsWorks_20130218_TagResource = 'OpsWorks_20130218.TagResource'


class XAmzTarget62(Enum):
    OpsWorks_20130218_UnassignInstance = 'OpsWorks_20130218.UnassignInstance'


class XAmzTarget63(Enum):
    OpsWorks_20130218_UnassignVolume = 'OpsWorks_20130218.UnassignVolume'


class XAmzTarget64(Enum):
    OpsWorks_20130218_UntagResource = 'OpsWorks_20130218.UntagResource'


class XAmzTarget65(Enum):
    OpsWorks_20130218_UpdateApp = 'OpsWorks_20130218.UpdateApp'


class XAmzTarget66(Enum):
    OpsWorks_20130218_UpdateElasticIp = 'OpsWorks_20130218.UpdateElasticIp'


class XAmzTarget67(Enum):
    OpsWorks_20130218_UpdateInstance = 'OpsWorks_20130218.UpdateInstance'


class XAmzTarget68(Enum):
    OpsWorks_20130218_UpdateLayer = 'OpsWorks_20130218.UpdateLayer'


class XAmzTarget69(Enum):
    OpsWorks_20130218_UpdateMyUserProfile = 'OpsWorks_20130218.UpdateMyUserProfile'


class XAmzTarget70(Enum):
    OpsWorks_20130218_UpdateRdsDbInstance = 'OpsWorks_20130218.UpdateRdsDbInstance'


class XAmzTarget71(Enum):
    OpsWorks_20130218_UpdateStack = 'OpsWorks_20130218.UpdateStack'


class XAmzTarget72(Enum):
    OpsWorks_20130218_UpdateUserProfile = 'OpsWorks_20130218.UpdateUserProfile'


class XAmzTarget73(Enum):
    OpsWorks_20130218_UpdateVolume = 'OpsWorks_20130218.UpdateVolume'


class AppAttributes(RootModel[Optional[Dict[str, String]]]):
    root: Optional[Dict[str, String]] = None


class AssignInstanceRequest(BaseModel):
    InstanceId: String
    LayerIds: Strings


class AssignVolumeRequest(BaseModel):
    InstanceId: Optional[String] = None
    VolumeId: String


class AssociateElasticIpRequest(BaseModel):
    ElasticIp: String
    InstanceId: Optional[String] = None


class AttachElasticLoadBalancerRequest(BaseModel):
    ElasticLoadBalancerName: String
    LayerId: String


class AutoScalingThresholds(BaseModel):
    Alarms: Optional[Strings] = None
    CpuThreshold: Optional[Double] = None
    IgnoreMetricsTime: Optional[Minute] = None
    InstanceCount: Optional[Integer] = None
    LoadThreshold: Optional[Double] = None
    MemoryThreshold: Optional[Double] = None
    ThresholdsWaitTime: Optional[Minute] = None


class ChefConfiguration(BaseModel):
    BerkshelfVersion: Optional[String] = None
    ManageBerkshelf: Optional[Boolean] = None


class CloneStackResult(BaseModel):
    StackId: Optional[String] = None


class CloudWatchLogsLogStream(BaseModel):
    BatchCount: Optional[Integer] = None
    BatchSize: Optional[Integer] = None
    BufferDuration: Optional[Integer] = None
    DatetimeFormat: Optional[String] = None
    Encoding: Optional[CloudWatchLogsEncoding] = None
    File: Optional[String] = None
    FileFingerprintLines: Optional[String] = None
    InitialPosition: Optional[CloudWatchLogsInitialPosition] = None
    LogGroupName: Optional[String] = None
    MultiLineStartPattern: Optional[String] = None
    TimeZone: Optional[CloudWatchLogsTimeZone] = None


class CloudWatchLogsLogStreams(RootModel[List[CloudWatchLogsLogStream]]):
    root: List[CloudWatchLogsLogStream] = Field(
        ...,
        description='Describes the Amazon CloudWatch logs configuration for a layer.',
    )


class Command(BaseModel):
    AcknowledgedAt: Optional[DateTime] = None
    CommandId: Optional[String] = None
    CompletedAt: Optional[DateTime] = None
    CreatedAt: Optional[DateTime] = None
    DeploymentId: Optional[String] = None
    ExitCode: Optional[Integer] = None
    InstanceId: Optional[String] = None
    LogUrl: Optional[String] = None
    Status: Optional[String] = None
    Type: Optional[String] = None


class Commands(RootModel[List[Command]]):
    root: List[Command]


class CreateAppResult(BaseModel):
    AppId: Optional[String] = None


class CreateDeploymentResult(BaseModel):
    DeploymentId: Optional[String] = None


class CreateInstanceResult(BaseModel):
    InstanceId: Optional[String] = None


class CreateLayerResult(BaseModel):
    LayerId: Optional[String] = None


class CreateStackResult(BaseModel):
    StackId: Optional[String] = None


class CreateUserProfileRequest(BaseModel):
    AllowSelfManagement: Optional[Boolean] = None
    IamUserArn: String
    SshPublicKey: Optional[String] = None
    SshUsername: Optional[String] = None


class CreateUserProfileResult(BaseModel):
    IamUserArn: Optional[String] = None


class DailyAutoScalingSchedule(RootModel[Optional[Dict[str, Switch]]]):
    root: Optional[Dict[str, Switch]] = None


class DataSource(BaseModel):
    Arn: Optional[String] = None
    DatabaseName: Optional[String] = None
    Type: Optional[String] = None


class DataSources(RootModel[List[DataSource]]):
    root: List[DataSource]


class DeleteAppRequest(BaseModel):
    AppId: String


class DeleteInstanceRequest(BaseModel):
    DeleteElasticIp: Optional[Boolean] = None
    DeleteVolumes: Optional[Boolean] = None
    InstanceId: String


class DeleteLayerRequest(BaseModel):
    LayerId: String


class DeleteStackRequest(BaseModel):
    StackId: String


class DeleteUserProfileRequest(BaseModel):
    IamUserArn: String


class DeploymentCommandArgs(RootModel[Optional[Dict[str, Strings]]]):
    root: Optional[Dict[str, Strings]] = None


class DeregisterEcsClusterRequest(BaseModel):
    EcsClusterArn: String


class DeregisterElasticIpRequest(BaseModel):
    ElasticIp: String


class DeregisterInstanceRequest(BaseModel):
    InstanceId: String


class DeregisterRdsDbInstanceRequest(BaseModel):
    RdsDbInstanceArn: String


class DeregisterVolumeRequest(BaseModel):
    VolumeId: String


class DescribeAppsRequest(BaseModel):
    AppIds: Optional[Strings] = None
    StackId: Optional[String] = None


class DescribeCommandsRequest(BaseModel):
    CommandIds: Optional[Strings] = None
    DeploymentId: Optional[String] = None
    InstanceId: Optional[String] = None


class DescribeCommandsResult(BaseModel):
    Commands_1: Optional[Commands] = Field(None, alias='Commands')


class DescribeDeploymentsRequest(BaseModel):
    AppId: Optional[String] = None
    DeploymentIds: Optional[Strings] = None
    StackId: Optional[String] = None


class DescribeEcsClustersRequest(BaseModel):
    EcsClusterArns: Optional[Strings] = None
    MaxResults: Optional[Integer] = None
    NextToken: Optional[String] = None
    StackId: Optional[String] = None


class DescribeElasticIpsRequest(BaseModel):
    InstanceId: Optional[String] = None
    Ips: Optional[Strings] = None
    StackId: Optional[String] = None


class DescribeElasticLoadBalancersRequest(BaseModel):
    LayerIds: Optional[Strings] = None
    StackId: Optional[String] = None


class DescribeInstancesRequest(BaseModel):
    InstanceIds: Optional[Strings] = None
    LayerId: Optional[String] = None
    StackId: Optional[String] = None


class DescribeLayersRequest(BaseModel):
    LayerIds: Optional[Strings] = None
    StackId: Optional[String] = None


class DescribeLoadBasedAutoScalingRequest(BaseModel):
    LayerIds: Strings


class DescribePermissionsRequest(BaseModel):
    IamUserArn: Optional[String] = None
    StackId: Optional[String] = None


class DescribeRaidArraysRequest(BaseModel):
    InstanceId: Optional[String] = None
    RaidArrayIds: Optional[Strings] = None
    StackId: Optional[String] = None


class DescribeRdsDbInstancesRequest(BaseModel):
    RdsDbInstanceArns: Optional[Strings] = None
    StackId: String


class DescribeServiceErrorsRequest(BaseModel):
    InstanceId: Optional[String] = None
    ServiceErrorIds: Optional[Strings] = None
    StackId: Optional[String] = None


class DescribeStackProvisioningParametersRequest(BaseModel):
    StackId: String


class DescribeStackSummaryRequest(BaseModel):
    StackId: String


class DescribeStacksRequest(BaseModel):
    StackIds: Optional[Strings] = None


class DescribeTimeBasedAutoScalingRequest(BaseModel):
    InstanceIds: Strings


class DescribeUserProfilesRequest(BaseModel):
    IamUserArns: Optional[Strings] = None


class DescribeUserProfilesResult(BaseModel):
    UserProfiles_1: Optional[UserProfiles] = Field(None, alias='UserProfiles')


class DescribeVolumesRequest(BaseModel):
    InstanceId: Optional[String] = None
    RaidArrayId: Optional[String] = None
    StackId: Optional[String] = None
    VolumeIds: Optional[Strings] = None


class DescribeVolumesResult(BaseModel):
    Volumes_1: Optional[Volumes] = Field(None, alias='Volumes')


class DetachElasticLoadBalancerRequest(BaseModel):
    ElasticLoadBalancerName: String
    LayerId: String


class DisassociateElasticIpRequest(BaseModel):
    ElasticIp: String


class EbsBlockDevice(BaseModel):
    DeleteOnTermination: Optional[Boolean] = None
    Iops: Optional[Integer] = None
    SnapshotId: Optional[String] = None
    VolumeSize: Optional[Integer] = None
    VolumeType_1: Optional[VolumeType] = Field(None, alias='VolumeType')


class EcsCluster(BaseModel):
    EcsClusterArn: Optional[String] = None
    EcsClusterName: Optional[String] = None
    RegisteredAt: Optional[DateTime] = None
    StackId: Optional[String] = None


class EcsClusters(RootModel[List[EcsCluster]]):
    root: List[EcsCluster]


class ElasticIp(BaseModel):
    Domain: Optional[String] = None
    InstanceId: Optional[String] = None
    Ip: Optional[String] = None
    Name: Optional[String] = None
    Region: Optional[String] = None


class ElasticIps(RootModel[List[ElasticIp]]):
    root: List[ElasticIp]


class ElasticLoadBalancer(BaseModel):
    AvailabilityZones: Optional[Strings] = None
    DnsName: Optional[String] = None
    Ec2InstanceIds: Optional[Strings] = None
    ElasticLoadBalancerName: Optional[String] = None
    LayerId: Optional[String] = None
    Region: Optional[String] = None
    StackId: Optional[String] = None
    SubnetIds: Optional[Strings] = None
    VpcId: Optional[String] = None


class ElasticLoadBalancers(RootModel[List[ElasticLoadBalancer]]):
    root: List[ElasticLoadBalancer]


class EnvironmentVariable(BaseModel):
    Key: String
    Secure: Optional[Boolean] = None
    Value: String


class EnvironmentVariables(RootModel[List[EnvironmentVariable]]):
    root: List[EnvironmentVariable]


class GetHostnameSuggestionRequest(BaseModel):
    LayerId: String


class GetHostnameSuggestionResult(BaseModel):
    Hostname: Optional[String] = None
    LayerId: Optional[String] = None


class GrantAccessRequest(BaseModel):
    InstanceId: String
    ValidForInMinutes_1: Optional[ValidForInMinutes] = Field(
        None, alias='ValidForInMinutes'
    )


class GrantAccessResult(BaseModel):
    TemporaryCredential_1: Optional[TemporaryCredential] = Field(
        None, alias='TemporaryCredential'
    )


class InstanceIdentity(BaseModel):
    Document: Optional[String] = None
    Signature: Optional[String] = None


class InstancesCount(BaseModel):
    Assigning: Optional[Integer] = None
    Booting: Optional[Integer] = None
    ConnectionLost: Optional[Integer] = None
    Deregistering: Optional[Integer] = None
    Online: Optional[Integer] = None
    Pending: Optional[Integer] = None
    Rebooting: Optional[Integer] = None
    Registered: Optional[Integer] = None
    Registering: Optional[Integer] = None
    Requested: Optional[Integer] = None
    RunningSetup: Optional[Integer] = None
    SetupFailed: Optional[Integer] = None
    ShuttingDown: Optional[Integer] = None
    StartFailed: Optional[Integer] = None
    StopFailed: Optional[Integer] = None
    Stopped: Optional[Integer] = None
    Stopping: Optional[Integer] = None
    Terminated: Optional[Integer] = None
    Terminating: Optional[Integer] = None
    Unassigning: Optional[Integer] = None


class LayerAttributes(RootModel[Optional[Dict[str, String]]]):
    root: Optional[Dict[str, String]] = None


class LifecycleEventConfiguration(BaseModel):
    Shutdown: Optional[ShutdownEventConfiguration] = None


class ListTagsRequest(BaseModel):
    MaxResults_1: Optional[MaxResults] = Field(None, alias='MaxResults')
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')
    ResourceArn_1: ResourceArn = Field(..., alias='ResourceArn')


class ListTagsResult(BaseModel):
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')
    Tags_1: Optional[Tags] = Field(None, alias='Tags')


class LoadBasedAutoScalingConfiguration(BaseModel):
    DownScaling: Optional[AutoScalingThresholds] = None
    Enable: Optional[Boolean] = None
    LayerId: Optional[String] = None
    UpScaling: Optional[AutoScalingThresholds] = None


class LoadBasedAutoScalingConfigurations(
    RootModel[List[LoadBasedAutoScalingConfiguration]]
):
    root: List[LoadBasedAutoScalingConfiguration]


class OperatingSystemConfigurationManager(BaseModel):
    Name: Optional[String] = None
    Version: Optional[String] = None


class OperatingSystemConfigurationManagers(
    RootModel[List[OperatingSystemConfigurationManager]]
):
    root: List[OperatingSystemConfigurationManager]


class Parameters(RootModel[Optional[Dict[str, String]]]):
    root: Optional[Dict[str, String]] = None


class Permission(BaseModel):
    AllowSsh: Optional[Boolean] = None
    AllowSudo: Optional[Boolean] = None
    IamUserArn: Optional[String] = None
    Level: Optional[String] = None
    StackId: Optional[String] = None


class Permissions(RootModel[List[Permission]]):
    root: List[Permission]


class RaidArray(BaseModel):
    AvailabilityZone: Optional[String] = None
    CreatedAt: Optional[DateTime] = None
    Device: Optional[String] = None
    InstanceId: Optional[String] = None
    Iops: Optional[Integer] = None
    MountPoint: Optional[String] = None
    Name: Optional[String] = None
    NumberOfDisks: Optional[Integer] = None
    RaidArrayId: Optional[String] = None
    RaidLevel: Optional[Integer] = None
    Size: Optional[Integer] = None
    StackId: Optional[String] = None
    VolumeType: Optional[String] = None


class RaidArrays(RootModel[List[RaidArray]]):
    root: List[RaidArray]


class RdsDbInstance(BaseModel):
    Address: Optional[String] = None
    DbInstanceIdentifier: Optional[String] = None
    DbPassword: Optional[String] = None
    DbUser: Optional[String] = None
    Engine: Optional[String] = None
    MissingOnRds: Optional[Boolean] = None
    RdsDbInstanceArn: Optional[String] = None
    Region: Optional[String] = None
    StackId: Optional[String] = None


class RdsDbInstances(RootModel[List[RdsDbInstance]]):
    root: List[RdsDbInstance]


class RebootInstanceRequest(BaseModel):
    InstanceId: String


class Recipes(BaseModel):
    Configure: Optional[Strings] = None
    Deploy: Optional[Strings] = None
    Setup: Optional[Strings] = None
    Shutdown: Optional[Strings] = None
    Undeploy: Optional[Strings] = None


class RegisterEcsClusterRequest(BaseModel):
    EcsClusterArn: String
    StackId: String


class RegisterEcsClusterResult(BaseModel):
    EcsClusterArn: Optional[String] = None


class RegisterElasticIpRequest(BaseModel):
    ElasticIp: String
    StackId: String


class RegisterElasticIpResult(BaseModel):
    ElasticIp: Optional[String] = None


class RegisterInstanceRequest(BaseModel):
    Hostname: Optional[String] = None
    InstanceIdentity_1: Optional[InstanceIdentity] = Field(
        None, alias='InstanceIdentity'
    )
    PrivateIp: Optional[String] = None
    PublicIp: Optional[String] = None
    RsaPublicKey: Optional[String] = None
    RsaPublicKeyFingerprint: Optional[String] = None
    StackId: String


class RegisterInstanceResult(BaseModel):
    InstanceId: Optional[String] = None


class RegisterRdsDbInstanceRequest(BaseModel):
    DbPassword: String
    DbUser: String
    RdsDbInstanceArn: String
    StackId: String


class RegisterVolumeRequest(BaseModel):
    Ec2VolumeId: Optional[String] = None
    StackId: String


class RegisterVolumeResult(BaseModel):
    VolumeId: Optional[String] = None


class ReportedOs(BaseModel):
    Family: Optional[String] = None
    Name: Optional[String] = None
    Version: Optional[String] = None


class SelfUserProfile(BaseModel):
    IamUserArn: Optional[String] = None
    Name: Optional[String] = None
    SshPublicKey: Optional[String] = None
    SshUsername: Optional[String] = None


class ServiceError(BaseModel):
    CreatedAt: Optional[DateTime] = None
    InstanceId: Optional[String] = None
    Message: Optional[String] = None
    ServiceErrorId: Optional[String] = None
    StackId: Optional[String] = None
    Type: Optional[String] = None


class ServiceErrors(RootModel[List[ServiceError]]):
    root: List[ServiceError]


class SetLoadBasedAutoScalingRequest(BaseModel):
    DownScaling: Optional[AutoScalingThresholds] = None
    Enable: Optional[Boolean] = None
    LayerId: String
    UpScaling: Optional[AutoScalingThresholds] = None


class SetPermissionRequest(BaseModel):
    AllowSsh: Optional[Boolean] = None
    AllowSudo: Optional[Boolean] = None
    IamUserArn: String
    Level: Optional[String] = None
    StackId: String


class Source(BaseModel):
    Password: Optional[String] = None
    Revision: Optional[String] = None
    SshKey: Optional[String] = None
    Type: Optional[SourceType] = None
    Url: Optional[String] = None
    Username: Optional[String] = None


class SslConfiguration(BaseModel):
    Certificate: String
    Chain: Optional[String] = None
    PrivateKey: String


class StackAttributes(RootModel[Optional[Dict[str, String]]]):
    root: Optional[Dict[str, String]] = None


class StackConfigurationManager(BaseModel):
    Name: Optional[String] = None
    Version: Optional[String] = None


class StackSummary(BaseModel):
    AppsCount: Optional[Integer] = None
    Arn: Optional[String] = None
    InstancesCount_1: Optional[InstancesCount] = Field(None, alias='InstancesCount')
    LayersCount: Optional[Integer] = None
    Name: Optional[String] = None
    StackId: Optional[String] = None


class StartInstanceRequest(BaseModel):
    InstanceId: String


class StartStackRequest(BaseModel):
    StackId: String


class StopInstanceRequest(BaseModel):
    Force: Optional[Boolean] = None
    InstanceId: String


class StopStackRequest(BaseModel):
    StackId: String


class TagResourceRequest(BaseModel):
    ResourceArn_1: ResourceArn = Field(..., alias='ResourceArn')
    Tags_1: Tags = Field(..., alias='Tags')


class UpdateAppRequest(BaseModel):
    AppId: String
    AppSource: Optional[Source] = None
    Attributes: Optional[AppAttributes] = None
    DataSources_1: Optional[DataSources] = Field(None, alias='DataSources')
    Description: Optional[String] = None
    Domains: Optional[Strings] = None
    EnableSsl: Optional[Boolean] = None
    Environment: Optional[EnvironmentVariables] = None
    Name: Optional[String] = None
    SslConfiguration_1: Optional[SslConfiguration] = Field(
        None, alias='SslConfiguration'
    )
    Type: Optional[AppType] = None


class UpdateStackRequest(BaseModel):
    AgentVersion: Optional[String] = None
    Attributes: Optional[StackAttributes] = None
    ChefConfiguration_1: Optional[ChefConfiguration] = Field(
        None, alias='ChefConfiguration'
    )
    ConfigurationManager: Optional[StackConfigurationManager] = None
    CustomCookbooksSource: Optional[Source] = None
    CustomJson: Optional[String] = None
    DefaultAvailabilityZone: Optional[String] = None
    DefaultInstanceProfileArn: Optional[String] = None
    DefaultOs: Optional[String] = None
    DefaultRootDeviceType: Optional[RootDeviceType] = None
    DefaultSshKeyName: Optional[String] = None
    DefaultSubnetId: Optional[String] = None
    HostnameTheme: Optional[String] = None
    Name: Optional[String] = None
    ServiceRoleArn: Optional[String] = None
    StackId: String
    UseCustomCookbooks: Optional[Boolean] = None
    UseOpsworksSecurityGroups: Optional[Boolean] = None


class WeeklyAutoScalingSchedule(BaseModel):
    Friday: Optional[DailyAutoScalingSchedule] = None
    Monday: Optional[DailyAutoScalingSchedule] = None
    Saturday: Optional[DailyAutoScalingSchedule] = None
    Sunday: Optional[DailyAutoScalingSchedule] = None
    Thursday: Optional[DailyAutoScalingSchedule] = None
    Tuesday: Optional[DailyAutoScalingSchedule] = None
    Wednesday: Optional[DailyAutoScalingSchedule] = None


class AgentVersion(BaseModel):
    ConfigurationManager: Optional[StackConfigurationManager] = None
    Version: Optional[String] = None


class AgentVersions(RootModel[List[AgentVersion]]):
    root: List[AgentVersion]


class App(BaseModel):
    AppId: Optional[String] = None
    AppSource: Optional[Source] = None
    Attributes: Optional[AppAttributes] = None
    CreatedAt: Optional[String] = None
    DataSources_1: Optional[DataSources] = Field(None, alias='DataSources')
    Description: Optional[String] = None
    Domains: Optional[Strings] = None
    EnableSsl: Optional[Boolean] = None
    Environment: Optional[EnvironmentVariables] = None
    Name: Optional[String] = None
    Shortname: Optional[String] = None
    SslConfiguration_1: Optional[SslConfiguration] = Field(
        None, alias='SslConfiguration'
    )
    StackId: Optional[String] = None
    Type: Optional[AppType] = None


class Apps(RootModel[List[App]]):
    root: List[App]


class BlockDeviceMapping(BaseModel):
    DeviceName: Optional[String] = None
    Ebs: Optional[EbsBlockDevice] = None
    NoDevice: Optional[String] = None
    VirtualName: Optional[String] = None


class BlockDeviceMappings(RootModel[List[BlockDeviceMapping]]):
    root: List[BlockDeviceMapping]


class CloneStackRequest(BaseModel):
    AgentVersion: Optional[String] = None
    Attributes: Optional[StackAttributes] = None
    ChefConfiguration_1: Optional[ChefConfiguration] = Field(
        None, alias='ChefConfiguration'
    )
    CloneAppIds: Optional[Strings] = None
    ClonePermissions: Optional[Boolean] = None
    ConfigurationManager: Optional[StackConfigurationManager] = None
    CustomCookbooksSource: Optional[Source] = None
    CustomJson: Optional[String] = None
    DefaultAvailabilityZone: Optional[String] = None
    DefaultInstanceProfileArn: Optional[String] = None
    DefaultOs: Optional[String] = None
    DefaultRootDeviceType: Optional[RootDeviceType] = None
    DefaultSshKeyName: Optional[String] = None
    DefaultSubnetId: Optional[String] = None
    HostnameTheme: Optional[String] = None
    Name: Optional[String] = None
    Region: Optional[String] = None
    ServiceRoleArn: String
    SourceStackId: String
    UseCustomCookbooks: Optional[Boolean] = None
    UseOpsworksSecurityGroups: Optional[Boolean] = None
    VpcId: Optional[String] = None


class CloudWatchLogsConfiguration(BaseModel):
    Enabled: Optional[Boolean] = None
    LogStreams: Optional[CloudWatchLogsLogStreams] = None


class CreateAppRequest(BaseModel):
    AppSource: Optional[Source] = None
    Attributes: Optional[AppAttributes] = None
    DataSources_1: Optional[DataSources] = Field(None, alias='DataSources')
    Description: Optional[String] = None
    Domains: Optional[Strings] = None
    EnableSsl: Optional[Boolean] = None
    Environment: Optional[EnvironmentVariables] = None
    Name: String
    Shortname: Optional[String] = None
    SslConfiguration_1: Optional[SslConfiguration] = Field(
        None, alias='SslConfiguration'
    )
    StackId: String
    Type: AppType


class CreateInstanceRequest(BaseModel):
    AgentVersion: Optional[String] = None
    AmiId: Optional[String] = None
    Architecture_1: Optional[Architecture] = Field(None, alias='Architecture')
    AutoScalingType_1: Optional[AutoScalingType] = Field(None, alias='AutoScalingType')
    AvailabilityZone: Optional[String] = None
    BlockDeviceMappings_1: Optional[BlockDeviceMappings] = Field(
        None, alias='BlockDeviceMappings'
    )
    EbsOptimized: Optional[Boolean] = None
    Hostname: Optional[String] = None
    InstallUpdatesOnBoot: Optional[Boolean] = None
    InstanceType: String
    LayerIds: Strings
    Os: Optional[String] = None
    RootDeviceType_1: Optional[RootDeviceType] = Field(None, alias='RootDeviceType')
    SshKeyName: Optional[String] = None
    StackId: String
    SubnetId: Optional[String] = None
    Tenancy: Optional[String] = None
    VirtualizationType: Optional[String] = None


class CreateLayerRequest(BaseModel):
    Attributes: Optional[LayerAttributes] = None
    AutoAssignElasticIps: Optional[Boolean] = None
    AutoAssignPublicIps: Optional[Boolean] = None
    CloudWatchLogsConfiguration_1: Optional[CloudWatchLogsConfiguration] = Field(
        None, alias='CloudWatchLogsConfiguration'
    )
    CustomInstanceProfileArn: Optional[String] = None
    CustomJson: Optional[String] = None
    CustomRecipes: Optional[Recipes] = None
    CustomSecurityGroupIds: Optional[Strings] = None
    EnableAutoHealing: Optional[Boolean] = None
    InstallUpdatesOnBoot: Optional[Boolean] = None
    LifecycleEventConfiguration_1: Optional[LifecycleEventConfiguration] = Field(
        None, alias='LifecycleEventConfiguration'
    )
    Name: String
    Packages: Optional[Strings] = None
    Shortname: String
    StackId: String
    Type: LayerType
    UseEbsOptimizedInstances: Optional[Boolean] = None
    VolumeConfigurations_1: Optional[VolumeConfigurations] = Field(
        None, alias='VolumeConfigurations'
    )


class CreateStackRequest(BaseModel):
    AgentVersion: Optional[String] = None
    Attributes: Optional[StackAttributes] = None
    ChefConfiguration_1: Optional[ChefConfiguration] = Field(
        None, alias='ChefConfiguration'
    )
    ConfigurationManager: Optional[StackConfigurationManager] = None
    CustomCookbooksSource: Optional[Source] = None
    CustomJson: Optional[String] = None
    DefaultAvailabilityZone: Optional[String] = None
    DefaultInstanceProfileArn: String
    DefaultOs: Optional[String] = None
    DefaultRootDeviceType: Optional[RootDeviceType] = None
    DefaultSshKeyName: Optional[String] = None
    DefaultSubnetId: Optional[String] = None
    HostnameTheme: Optional[String] = None
    Name: String
    Region: String
    ServiceRoleArn: String
    UseCustomCookbooks: Optional[Boolean] = None
    UseOpsworksSecurityGroups: Optional[Boolean] = None
    VpcId: Optional[String] = None


class DeploymentCommand(BaseModel):
    Args: Optional[DeploymentCommandArgs] = None
    Name: DeploymentCommandName


class DescribeAgentVersionsRequest(BaseModel):
    ConfigurationManager: Optional[StackConfigurationManager] = None
    StackId: Optional[String] = None


class DescribeAgentVersionsResult(BaseModel):
    AgentVersions_1: Optional[AgentVersions] = Field(None, alias='AgentVersions')


class DescribeAppsResult(BaseModel):
    Apps_1: Optional[Apps] = Field(None, alias='Apps')


class DescribeEcsClustersResult(BaseModel):
    EcsClusters_1: Optional[EcsClusters] = Field(None, alias='EcsClusters')
    NextToken: Optional[String] = None


class DescribeElasticIpsResult(BaseModel):
    ElasticIps_1: Optional[ElasticIps] = Field(None, alias='ElasticIps')


class DescribeElasticLoadBalancersResult(BaseModel):
    ElasticLoadBalancers_1: Optional[ElasticLoadBalancers] = Field(
        None, alias='ElasticLoadBalancers'
    )


class DescribeLoadBasedAutoScalingResult(BaseModel):
    LoadBasedAutoScalingConfigurations_1: Optional[
        LoadBasedAutoScalingConfigurations
    ] = Field(None, alias='LoadBasedAutoScalingConfigurations')


class DescribeMyUserProfileResult(BaseModel):
    UserProfile: Optional[SelfUserProfile] = None


class DescribePermissionsResult(BaseModel):
    Permissions_1: Optional[Permissions] = Field(None, alias='Permissions')


class DescribeRaidArraysResult(BaseModel):
    RaidArrays_1: Optional[RaidArrays] = Field(None, alias='RaidArrays')


class DescribeRdsDbInstancesResult(BaseModel):
    RdsDbInstances_1: Optional[RdsDbInstances] = Field(None, alias='RdsDbInstances')


class DescribeServiceErrorsResult(BaseModel):
    ServiceErrors_1: Optional[ServiceErrors] = Field(None, alias='ServiceErrors')


class DescribeStackProvisioningParametersResult(BaseModel):
    AgentInstallerUrl: Optional[String] = None
    Parameters_1: Optional[Parameters] = Field(None, alias='Parameters')


class DescribeStackSummaryResult(BaseModel):
    StackSummary_1: Optional[StackSummary] = Field(None, alias='StackSummary')


class Instance(BaseModel):
    AgentVersion: Optional[String] = None
    AmiId: Optional[String] = None
    Architecture_1: Optional[Architecture] = Field(None, alias='Architecture')
    Arn: Optional[String] = None
    AutoScalingType_1: Optional[AutoScalingType] = Field(None, alias='AutoScalingType')
    AvailabilityZone: Optional[String] = None
    BlockDeviceMappings_1: Optional[BlockDeviceMappings] = Field(
        None, alias='BlockDeviceMappings'
    )
    CreatedAt: Optional[DateTime] = None
    EbsOptimized: Optional[Boolean] = None
    Ec2InstanceId: Optional[String] = None
    EcsClusterArn: Optional[String] = None
    EcsContainerInstanceArn: Optional[String] = None
    ElasticIp: Optional[String] = None
    Hostname: Optional[String] = None
    InfrastructureClass: Optional[String] = None
    InstallUpdatesOnBoot: Optional[Boolean] = None
    InstanceId: Optional[String] = None
    InstanceProfileArn: Optional[String] = None
    InstanceType: Optional[String] = None
    LastServiceErrorId: Optional[String] = None
    LayerIds: Optional[Strings] = None
    Os: Optional[String] = None
    Platform: Optional[String] = None
    PrivateDns: Optional[String] = None
    PrivateIp: Optional[String] = None
    PublicDns: Optional[String] = None
    PublicIp: Optional[String] = None
    RegisteredBy: Optional[String] = None
    ReportedAgentVersion: Optional[String] = None
    ReportedOs_1: Optional[ReportedOs] = Field(None, alias='ReportedOs')
    RootDeviceType_1: Optional[RootDeviceType] = Field(None, alias='RootDeviceType')
    RootDeviceVolumeId: Optional[String] = None
    SecurityGroupIds: Optional[Strings] = None
    SshHostDsaKeyFingerprint: Optional[String] = None
    SshHostRsaKeyFingerprint: Optional[String] = None
    SshKeyName: Optional[String] = None
    StackId: Optional[String] = None
    Status: Optional[String] = None
    SubnetId: Optional[String] = None
    Tenancy: Optional[String] = None
    VirtualizationType_1: Optional[VirtualizationType] = Field(
        None, alias='VirtualizationType'
    )


class Instances(RootModel[List[Instance]]):
    root: List[Instance]


class Layer(BaseModel):
    Arn: Optional[String] = None
    Attributes: Optional[LayerAttributes] = None
    AutoAssignElasticIps: Optional[Boolean] = None
    AutoAssignPublicIps: Optional[Boolean] = None
    CloudWatchLogsConfiguration_1: Optional[CloudWatchLogsConfiguration] = Field(
        None, alias='CloudWatchLogsConfiguration'
    )
    CreatedAt: Optional[DateTime] = None
    CustomInstanceProfileArn: Optional[String] = None
    CustomJson: Optional[String] = None
    CustomRecipes: Optional[Recipes] = None
    CustomSecurityGroupIds: Optional[Strings] = None
    DefaultRecipes: Optional[Recipes] = None
    DefaultSecurityGroupNames: Optional[Strings] = None
    EnableAutoHealing: Optional[Boolean] = None
    InstallUpdatesOnBoot: Optional[Boolean] = None
    LayerId: Optional[String] = None
    LifecycleEventConfiguration_1: Optional[LifecycleEventConfiguration] = Field(
        None, alias='LifecycleEventConfiguration'
    )
    Name: Optional[String] = None
    Packages: Optional[Strings] = None
    Shortname: Optional[String] = None
    StackId: Optional[String] = None
    Type: Optional[LayerType] = None
    UseEbsOptimizedInstances: Optional[Boolean] = None
    VolumeConfigurations_1: Optional[VolumeConfigurations] = Field(
        None, alias='VolumeConfigurations'
    )


class Layers(RootModel[List[Layer]]):
    root: List[Layer]


class OperatingSystem(BaseModel):
    ConfigurationManagers: Optional[OperatingSystemConfigurationManagers] = None
    Id: Optional[String] = None
    Name: Optional[String] = None
    ReportedName: Optional[String] = None
    ReportedVersion: Optional[String] = None
    Supported: Optional[Boolean] = None
    Type: Optional[String] = None


class OperatingSystems(RootModel[List[OperatingSystem]]):
    root: List[OperatingSystem]


class SetTimeBasedAutoScalingRequest(BaseModel):
    AutoScalingSchedule: Optional[WeeklyAutoScalingSchedule] = None
    InstanceId: String


class Stack(BaseModel):
    AgentVersion: Optional[String] = None
    Arn: Optional[String] = None
    Attributes: Optional[StackAttributes] = None
    ChefConfiguration_1: Optional[ChefConfiguration] = Field(
        None, alias='ChefConfiguration'
    )
    ConfigurationManager: Optional[StackConfigurationManager] = None
    CreatedAt: Optional[DateTime] = None
    CustomCookbooksSource: Optional[Source] = None
    CustomJson: Optional[String] = None
    DefaultAvailabilityZone: Optional[String] = None
    DefaultInstanceProfileArn: Optional[String] = None
    DefaultOs: Optional[String] = None
    DefaultRootDeviceType: Optional[RootDeviceType] = None
    DefaultSshKeyName: Optional[String] = None
    DefaultSubnetId: Optional[String] = None
    HostnameTheme: Optional[String] = None
    Name: Optional[String] = None
    Region: Optional[String] = None
    ServiceRoleArn: Optional[String] = None
    StackId: Optional[String] = None
    UseCustomCookbooks: Optional[Boolean] = None
    UseOpsworksSecurityGroups: Optional[Boolean] = None
    VpcId: Optional[String] = None


class Stacks(RootModel[List[Stack]]):
    root: List[Stack]


class TimeBasedAutoScalingConfiguration(BaseModel):
    AutoScalingSchedule: Optional[WeeklyAutoScalingSchedule] = None
    InstanceId: Optional[String] = None


class TimeBasedAutoScalingConfigurations(
    RootModel[List[TimeBasedAutoScalingConfiguration]]
):
    root: List[TimeBasedAutoScalingConfiguration]


class UpdateLayerRequest(BaseModel):
    Attributes: Optional[LayerAttributes] = None
    AutoAssignElasticIps: Optional[Boolean] = None
    AutoAssignPublicIps: Optional[Boolean] = None
    CloudWatchLogsConfiguration_1: Optional[CloudWatchLogsConfiguration] = Field(
        None, alias='CloudWatchLogsConfiguration'
    )
    CustomInstanceProfileArn: Optional[String] = None
    CustomJson: Optional[String] = None
    CustomRecipes: Optional[Recipes] = None
    CustomSecurityGroupIds: Optional[Strings] = None
    EnableAutoHealing: Optional[Boolean] = None
    InstallUpdatesOnBoot: Optional[Boolean] = None
    LayerId: String
    LifecycleEventConfiguration_1: Optional[LifecycleEventConfiguration] = Field(
        None, alias='LifecycleEventConfiguration'
    )
    Name: Optional[String] = None
    Packages: Optional[Strings] = None
    Shortname: Optional[String] = None
    UseEbsOptimizedInstances: Optional[Boolean] = None
    VolumeConfigurations_1: Optional[VolumeConfigurations] = Field(
        None, alias='VolumeConfigurations'
    )


class CreateDeploymentRequest(BaseModel):
    AppId: Optional[String] = None
    Command: DeploymentCommand
    Comment: Optional[String] = None
    CustomJson: Optional[String] = None
    InstanceIds: Optional[Strings] = None
    LayerIds: Optional[Strings] = None
    StackId: String


class Deployment(BaseModel):
    AppId: Optional[String] = None
    Command: Optional[DeploymentCommand] = None
    Comment: Optional[String] = None
    CompletedAt: Optional[DateTime] = None
    CreatedAt: Optional[DateTime] = None
    CustomJson: Optional[String] = None
    DeploymentId: Optional[String] = None
    Duration: Optional[Integer] = None
    IamUserArn: Optional[String] = None
    InstanceIds: Optional[Strings] = None
    StackId: Optional[String] = None
    Status: Optional[String] = None


class Deployments(RootModel[List[Deployment]]):
    root: List[Deployment]


class DescribeDeploymentsResult(BaseModel):
    Deployments_1: Optional[Deployments] = Field(None, alias='Deployments')


class DescribeInstancesResult(BaseModel):
    Instances_1: Optional[Instances] = Field(None, alias='Instances')


class DescribeLayersResult(BaseModel):
    Layers_1: Optional[Layers] = Field(None, alias='Layers')


class DescribeOperatingSystemsResponse(BaseModel):
    OperatingSystems_1: Optional[OperatingSystems] = Field(
        None, alias='OperatingSystems'
    )


class DescribeStacksResult(BaseModel):
    Stacks_1: Optional[Stacks] = Field(None, alias='Stacks')


class DescribeTimeBasedAutoScalingResult(BaseModel):
    TimeBasedAutoScalingConfigurations_1: Optional[
        TimeBasedAutoScalingConfigurations
    ] = Field(None, alias='TimeBasedAutoScalingConfigurations')
